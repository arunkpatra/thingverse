# If we want to use Consul Discovery to llok the gRPC backend service, we need to usethis environment variable
# -Dakka.grpc.client.thingverse-service-client.service-discovery.mechanism=akka-consul

akka.loglevel = INFO

//akka {
//  ssl-config {
//    loose.acceptAnyCertificate = true
//  }
//}

akka.grpc.client {
  thingverse-service-client {
    service-discovery {
      mechanism = "config"
      service-name = "thingverse-backend"
    }
    use-tls = false
    grpc-load-balancing = "round_robin"
  }
}

akka.discovery.config.services {
  thingverse-backend {
    endpoints = [
      {
        host = "127.0.0.1"
        port = 8080
      },
      {
        host = "127.0.0.1"
        port = 8081
      },
      {
        host = "127.0.0.1"
        port = 8082
      },
      {
        host = "127.0.0.1"
        port = 8083
      }
    ]
  }
}

akka {
  discovery {
    method = akka-consul
    akka-consul {
      consul-host = "127.0.0.1"
      consul-port = 8500
      # Prefix for consul tag with the name of the actor system / application name,
      # services with this tag present will be found by the discovery mechanism
      # i.e. `system:test` will be found in cluster if the cluster system is named `test`
      application-name-tag-prefix = "system:"
      application-akka-management-port-tag-prefix = "grpc-service-port:"
    }
    # Must See : https://doc.akka.io/docs/akka-management/current/discovery/kubernetes.html
    # You must have matching deploymnets in Kubernetes for this discovery method to work.
    # To activate this, you should pass akka.discovery.method=kubernetes-service either via system property or Config while
    # creating the actor system. In thingverse, we detect the execution environmnet and teak the Config.
    kubernetes-service {
      service-namespace = "thingverse"
      service-label-selector = "app=thingverse-backend"
    }
  }
}
