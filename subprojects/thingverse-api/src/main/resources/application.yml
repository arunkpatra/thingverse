management.metrics.tags.application: ${spring.application.name}
management.metrics.distribution.percentiles-histogram.http.server.requests: true
management.metrics.distribution.percentiles-histogram.resilience4j.circuitbreaker.calls: true
management.endpoint.health.show-details: always
management.health.diskspace.enabled: false
management.health.circuitbreakers.enabled: true
management.health.ratelimiters.enabled: false
management.endpoint.logfile.enabled: true

management:
  endpoints:
    web:
      exposure:
        include: '*'
server:
  port: 9090

spring:
#  jackson.serialization.indent_output: true
  application:
    name: thingverse-api
  boot:
    admin:
      client:
        auto-deregistration: true
        auto-registration: true
        enabled: true
        instance:
          metadata:
            tags:
              environment: localhost
          name: ${spring.application.name}
          prefer-ip: true
        url: http://localhost:9595
  cloud:
    consul:
      discovery:
        health-check-critical-timeout: 90s
        health-check-interval: 5s
        instance-id: ${spring.application.name}:${random.value}
        prefer-ip-address: true
      enabled: false
      host: localhost
      port: 8500
    loadbalancer:
      ribbon:
        enabled: false
  datasource:
    continue-on-error: false
    data: classpath:sql/data-derby.sql
    hikari:
      connection-test-query: SELECT 1 FROM SYSIBM.SYSDUMMY1
      maximum-pool-size: 50
      minimum-idle: 10
    initialization-mode: embedded
    name: thingversedb
    platform: derby
    schema: classpath:sql/schema-derby.sql
    test-on-borrow: true
    url: jdbc:derby:memory:thingversedb;create=true
  jpa:
    generate-ddl: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        format_sql: true
    show-sql: false
springfox:
  documentation:
    swagger:
      v2:
        basePath: /thingverse-api

thingverse:
  tracing:
    enabled: false
    service-name: ${spring.application.name}
    jaeger-sampler-type: const
    jaeger-sampler-param: 1
    transmit-span: true
    jaeger-propagation-formats: b3
  api:
    call-timeout-millis: 20000
    tracing-enabled: true
  grpc:
    client:
      enabled: true
  metrics:
    enabled: true

resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true
      slidingWindowSize: 10
      minimumNumberOfCalls: 10
      permittedNumberOfCallsInHalfOpenState: 3
      automaticTransitionFromOpenToHalfOpenEnabled: true
      waitDurationInOpenState: 5s
      failureRateThreshold: 50
      slowCallRateThreshold: 100
      slowCallDurationThreshold: 30000
      eventConsumerBufferSize: 10
      recordExceptions:
        - com.thingverse.common.exception.ThingverseBackendException
        - org.springframework.web.client.HttpServerErrorException
        - java.util.concurrent.TimeoutException
        - java.io.IOException
#      ignoreExceptions:
#        - io.github.robwin.exception.BusinessException
    shared:
      slidingWindowSize: 100
      permittedNumberOfCallsInHalfOpenState: 30
      waitDurationInOpenState: 1s
      failureRateThreshold: 50
      eventConsumerBufferSize: 10
#      ignoreExceptions:
#        - io.github.robwin.exception.BusinessException
  instances:
    thingverseBackend:
      baseConfig: default

resilience4j.retry:
  configs:
    default:
      registerHealthIndicator: true
      maxRetryAttempts: 6
      waitDuration: 1000
      retryExceptions:
        - com.thingverse.common.exception.ThingverseBackendException
        - org.springframework.web.client.HttpServerErrorException
        - java.util.concurrent.TimeoutException
        - java.io.IOException
#      ignoreExceptions:
#        - io.github.robwin.exception.BusinessException
  instances:
    thingverseBackend:
      baseConfig: default

resilience4j.bulkhead:
  configs:
    default:
      maxConcurrentCalls: 100
  instances:
    thingverseBackend:
      maxWaitDuration: 10ms
      maxConcurrentCalls: 500

resilience4j.thread-pool-bulkhead:
  configs:
    default:
      maxThreadPoolSize: 4
      coreThreadPoolSize: 2
      queueCapacity: 2
  instances:
    thingverseBackend:
      maxThreadPoolSize: 8
      coreThreadPoolSize: 4
      queueCapacity: 2

resilience4j.ratelimiter:
  configs:
    default:
      registerHealthIndicator: false
      limitForPeriod: 10
      limitRefreshPeriod: 1s
      timeoutDuration: 0
      eventConsumerBufferSize: 100
  instances:
    thingverseBackend:
      limitForPeriod: 6
      limitRefreshPeriod: 500ms
      timeoutDuration: 3s

resilience4j.timelimiter:
  configs:
    default:
      cancelRunningFuture: false
      timeoutDuration: 2s
  instances:
    thingverseBackend:
      baseConfig: default